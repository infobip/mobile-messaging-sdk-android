plugins {
    id 'com.android.library'
}

android {
    namespace = "org.infobip.mobile.messaging.android"
    buildToolsVersion = mm_buildToolsVersion
    compileSdk = mm_compileSdkVersion

    publishing {
        multipleVariants {
            allVariants()
            withJavadocJar()
            withSourcesJar()
        }
    }

    defaultConfig {
        minSdkVersion mm_minSdkVersion
        targetSdkVersion mm_targetSdkVersion

        // since AGP 4.1 "VERSION_NAME" is not included anymore to BuildConfig
        // https://issuetracker.google.com/issues/154275579
        buildConfigField "String", "VERSION_NAME", "\"$versionName\""
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }
    buildFeatures {
        buildConfig true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lint {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation 'com.google.code.gson:gson:2.9.0'

    implementation "androidx.test.ext:junit:$mm_androidJunitVersion"
    implementation "androidx.test:runner:$mm_androidTestRunnerVersion"
    implementation "com.crittercism.dexmaker:dexmaker-dx:1.4"
    implementation "com.crittercism.dexmaker:dexmaker:1.4"
    implementation "com.crittercism.dexmaker:dexmaker-mockito:1.4"
    implementation "org.mockito:mockito-core:$mm_mockitoCoreVersion"
    implementation "junit:junit:$mm_junitVersion"
    api('org.skyscreamer:jsonassert:1.5.0') {
        exclude group: "org.json", module: "json"
    }
}
android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def jar = project.tasks.create(name: "jar${name.capitalize()}", type: Jar) {
        Task javaCompileTask
        if (variant.hasProperty('javaCompileProvider')) {
            // Android 3.3.0+
            javaCompileTask = variant.javaCompileProvider.get()
        } else {
            javaCompileTask = variant.javaCompile
        }

        dependsOn javaCompileTask
        from javaCompileTask.destinationDirectory

        manifest {
            attributes(
                    "Bundle-Name": 'parse-android',
                    "Bundle-Version": project.version
            )
        }

        exclude '**/R.class'
        exclude '**/R\$*.class'
        exclude '**/Manifest.class'
        exclude '**/Manifest\$*.class'
        exclude '**/BuildConfig.class'
    }

    artifacts {
        archives jar
    }
}
