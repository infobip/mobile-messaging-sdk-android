buildscript {
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$mm_gradlePluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$mm_kotlinVersion"
    }
}

plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
}

android {
    compileSdkVersion mm_compileSdkVersion
    buildToolsVersion mm_buildToolsVersion

    defaultConfig {
        minSdkVersion mm_minSdkVersion
        targetSdkVersion mm_targetSdkVersion
        versionCode 1
        versionName project.version

        // since AGP 4.1 "VERSION_NAME" is not included anymore to BuildConfig
        // https://issuetracker.google.com/issues/154275579
        buildConfigField "String", "VERSION_NAME", "\"$versionName\""
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles 'proguard-rules.pro'
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation project(":infobip-mobile-messaging-android-sdk")
    api project(":infobip-mobile-messaging-android-resources")
    implementation project(":infobip-mobile-messaging-api-java")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$mm_kotlinVersion"
    implementation "androidx.core:core-ktx:$mm_coreKtxVersion"

    implementation "androidx.constraintlayout:constraintlayout:$mm_constraintLayoutVersion"
    implementation "androidx.appcompat:appcompat:$mm_appCompatVersion"
    implementation "com.google.android.material:material:$mm_materialVersion"
    implementation 'androidx.exifinterface:exifinterface:1.3.6'

    androidTestImplementation project(":infobip-mobile-messaging-android-test")
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "junit:junit:4.12"
    androidTestImplementation "org.mockito:mockito-core:1.10.19"
    androidTestImplementation 'com.nanohttpd:nanohttpd:2.1.0'

    testImplementation project(":infobip-mobile-messaging-android-test")
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:1.10.19"

    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$mm_desugarJdkVersion"
    implementation 'com.android.support:multidex:2.0.1'
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def jar = project.tasks.create(name: "jar${name.capitalize()}", type: Jar) {
        Task javaCompileTask
        if (variant.hasProperty('javaCompileProvider')) {
            // Android 3.3.0+
            javaCompileTask = variant.javaCompileProvider.get()
        } else {
            javaCompileTask = variant.javaCompile
        }

        dependsOn javaCompileTask
        from javaCompileTask.destinationDir

        manifest {
            attributes(
                    "Bundle-Name": 'parse-android',
                    "Bundle-Version": project.version
            )
        }

        exclude '**/R.class'
        exclude '**/R\$*.class'
        exclude '**/Manifest.class'
        exclude '**/Manifest\$*.class'
        exclude '**/BuildConfig.class'
    }

    artifacts {
        archives jar
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

ext {
    PUBLISH_ARTIFACT_ID = 'infobip-mobile-messaging-android-chat-sdk'
}
apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"
apply from: "${rootProject.projectDir}/jacoco.gradle"