
plugins {
    id 'java-library'
    id 'maven-publish'
    id 'idea'
    id 'io.freefair.lombok' version '5.1.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
    provided
}

sourceSets {
    main { compileClasspath += configurations.provided }
    test { compileClasspath += configurations.provided }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

javadoc {
    failOnError = false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

idea {
    module {
        try {
            scopes.PROVIDED.plus += [project.configurations.provided]

            //scopes.PROVIDED.plus += project.configurations.provided.compile
            //scopes.PROVIDED.plus += project.configurations.provided.runtime
            //scopes.COMPILE.minus += project.configurations.provided.compile
            //scopes.RUNTIME.minus += project.configurations.provided.runtime
        } catch (NullPointerException e) {
            println ":${project.name} ${e}"
        }
    }
}

dependencies {
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation "commons-codec:commons-codec:1.10"

    testImplementation "junit:junit:4.12"
    testImplementation "org.assertj:assertj-core:2.3.0"
    testImplementation "com.nanohttpd:nanohttpd:2.1.0"
    testImplementation "org.skyscreamer:jsonassert:1.5.0"
    testImplementation "org.mockito:mockito-core:1.10.19"
}

ext {
    PUBLISH_ARTIFACT_ID = 'infobip-mobile-messaging-api-java'
}
apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"
apply from: "${rootProject.projectDir}/jacoco.gradle"
